
# DML Script to compute principle components

# input: data matrix A
# output: eigen vectors and eigen values

# declaration of external function that invokes JLapack
eigen = externalFunction(Matrix[Double] A) 
return (Matrix[Double] evec, Matrix[Double] eval) 
implemented in (classname="com.ibm.bi.dml.packagesupport.JLapackEigenWrapper",execlocation="master")

A = read("my.data", rows=1000000, cols=1000, format="text");

N = nrow(A);
D = ncol(A);

# mean of each feature
mu = colSums(A)/N;

# co-variance matrix 
C = (t(A) %*% A)/(N-1) - (N/(N-1))*mu %*% t(mu);

#call to external function
[evec, eval] = eigen(C)
 
# select dominant eigen vectors 
#components = 3;
#evec_dominant = evec[,1:components]
#eval_dominant = eval[1:components]

write(evec, "my.eigen.vectors", format="text");
write(eval, "my.eigen.values", format="text");
