
execSum = function(Matrix[Double] X) return (Double sx) 
{
   sx = sum(X);    
}

#V = read($1, rows=$2, cols=$3);
V = Rand( rows=5,cols=5);

R = Rand(rows=5,cols=1,min=0,max=0); 
dummy = Rand(rows=1, cols=1, min=1, max=1);

parfor ( i in 1:5 ) 
{
   X = V[,i];
   sumx = execSum(X);
   R[i,1] = dummy * sumx; 
}  

write(R, "dollar_4"); 


############### CASE 1 ##########################
/*
X = Rand(rows=10,cols=10);
i = 3; 

if (i > 1) {
	X = Rand(rows=11,cols=11);
}
else {
  X = Rand(rows=11,cols=11);	
}

c = ncol(X);
print("cols = " + c);
*/

############### CASE 2 ##########################

/*

X = Rand(rows=10,cols=10);
i = 3; 

if (i > 1) {
	X = X[1,1];
}
else {
  X = X[2,2];	
}

c = ncol(X);
print("cols = " + c);
*/


############### CASE 2a ##########################

/*
X = Rand(rows=10,cols=10);
i = 3; 

if (i > 1) {
	A = X[1,1];
}
else {
	A = X[2,2];	
}

c = ncol(X);
print("cols = " + c);
*/

############### CASE 3 ##########################

/*
X = Rand(rows=10,cols=10);
i = 3; 

if (i > 1) {
	X = X[1,1];
}
else {
	X = X[2,];	
}

c = ncol(X);
print("cols = " + c);
*/

############## CASE 3a #################################

/*
X = Rand(rows=10,cols=10);
i = 3; 

if (i > 1) {
	A = X[1,1];
}
else {
	A = X[2,];	
}

c = ncol(A);
print("cols = " + c);
*/

############### CASE 4 ##########################

/*
X = Rand(rows=10,cols=10);
i = 3; 

if (i > 1) {
	A = Rand(rows=10,cols=10);
}


c = ncol(A);
print("cols = " + c);
*/

############### CASE 5 ##########################
/*
X = Rand(rows=10,cols=10);
i = 3; 

if (i > 1) {
	A = X[1,1];
}

c = ncol(A);
print("cols = " + c);
*/


############### CASE 6 ##########################

/*
X = Rand(rows=10,cols=10);
i = 3; 

if (i > 1) {
	X = Rand(rows=10,cols=10);
}

c = ncol(X);
print("cols = " + c);
*/

############### CASE 7 ##########################

/*
X = Rand(rows=10,cols=10);
i = 3; 

if (i > 1) {
	A = Rand(rows=10,cols=10);
}
else {
  A = Rand(rows=11,cols=11);
}

c = ncol(A);
print("cols = " + c);
*/

############### CASE 8 ##########################

/*
X = Rand(rows=10,cols=10);
i = 3; 

if (i > 1) {
	A = Rand(rows=10,cols=10);
}
else {
  	B = Rand(rows=11,cols=11);
}

c = ncol(A);
d = ncol(B);
print("cols = " + c);
print("cols = " + d);
*/

############### CASE 9 ##########################

/*
A = Rand(rows=10,cols=10);
i = 3; 

if (i > 1) {
	A = Rand(rows=10,cols=10);
}
else {
  	B = Rand(rows=11,cols=11);
}

c = ncol(A);
d = ncol(B);
print("cols = " + c);
print("cols = " + d);
*/   

############### CASE 10 ##########################

/*
A = Rand(rows=10,cols=10);
i = 3; 

if (i > 1) {
	A = Rand(rows=10,cols=10);
}
else {
  	A = Rand(rows=11,cols=11);
}

c = ncol(A);
d = ncol(B);
print("cols = " + c);
print("cols = " + d); 
*/

############### CASE 11: append all 4 dims unknown ##########################

/*
A = Rand(rows=10,cols=10);
i = 3; 

if (i > 1) {
	A = Rand(rows=10,cols=10);
}
else {
  	A = Rand(rows=11,cols=11);
}

C =append(A,A);

c = ncol(A);
d = ncol(B);
print("cols = " + c);
print("cols = " + d); 
*/

############### CASE 12: append both A dims unknown, both B dims known ######

/*
A = Rand(rows=10,cols=10);
i = 3; 

if (i > 1) {
	A = Rand(rows=10,cols=10);
}
else {
  	A = Rand(rows=11,cols=11);
}

ones = Rand (rows = 10, cols = 1);
C = append(A,ones);

c = ncol(A);
d = ncol(C);
print("cols = " + c);
print("cols = " + d); 
*/

############### CASE 12: append A row dims unknown, both B dims known ######

/*
A = Rand(rows=10,cols=10);
i = 3; 

if (i > 1) {
	A = Rand(rows=9,cols=10);
}
else {
  	A = Rand(rows=11,cols=10);
}

ones = Rand (rows = 10, cols = 1);
C = append(A,ones);

c = ncol(A);
d = ncol(C);
print("cols = " + c);
print("cols = " + d); 
*/

############### CASE 13: append A row dims unknown, both B dims known, mismatch ######

/*
A = Rand(rows=10,cols=10);
i = 3; 

if (i > 1) {
	A = Rand(rows=11,cols=10);
}
else {
  	A = Rand(rows=11,cols=10);
}

ones = Rand (rows = 10, cols = 1);
C = append(A,ones);

c = ncol(A);
d = ncol(C);
print("cols = " + c);
print("cols = " + d); 
*/

############### CASE 14: append A row dims unknown, both B dims known, mismatch ######

/*
A = Rand(rows=10,cols=10);
i = 3; 

if (i > 1) {
	A = Rand(rows=11,cols=10);
}
else {
  	A = Rand(rows=11,cols=10);
}

ones = Rand (rows = 11, cols = 1);
C = append(A,ones);

c = ncol(A);
d = ncol(C);
print("cols = " + c);
print("cols = " + d);
*/

############### CASE 15: const var same value both if / else ####
/*
A = Rand(rows=10,cols=10);
i = 3; 

if (i > 1) {
	A = Rand(rows=11,cols=10);
	j = 1;
}
else {
  	A = Rand(rows=11,cols=10);
	j = 1;
}

ones = Rand (rows = 11, cols = 1);
C = append(A,ones);

c = ncol(A);
d = ncol(C);
print("cols = " + c);
print("cols = " + d);
*/

############### CASE 16: const var different value if / else ####
/*
A = Rand(rows=10,cols=10);
i = 3; 
j = 1.0;

if (i > 1) {
	A = Rand(rows=11,cols=10)
}
else {
  	A = Rand(rows=11,cols=10);
	j = 1;
}

ones = Rand (rows = 11, cols = 1);
C = append(A,ones);

c = ncol(A);
d = ncol(C);
print("cols = " + c);
print("cols = " + d); 
*/ 