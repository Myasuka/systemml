//
// Data Preparation for Logistic Regression
//

// Jaql Functions to write SystemML matrices
import CSVtoMTX;

// variables

fname = "bjr/logreg/features250.csv";
data = read( del( fname, inoptions={header:true}));

attrList =
["class","prodyear","minlivedays","avglivedays","devlivedays","maxlivedays","allcnt","distreaddatecnt","minreadoutidx","avgreadoutidx","devreadoutidx","maxreadoutidx","minrepaircase","avgrepaircase","devrepaircase","maxrepaircase","minmileage","avgmileage","devmileage","maxmileage","minreadoutdatelag","avgreadoutdatelag","devreadoutdatelag","maxreadoutdatelag","minmileagelag","avgmileagelag","devmileagelag","maxmileagelag","minnumdtc","avgnumdtc","devnumdtc","maxnumdtc","sumnumdtc","mindeltadtc","avgdeltadtc","devdeltadtc","maxdeltadtc","minnumcommondtcprev","avgnumcommondtcprev","devnumcommondtcprev","maxnumcommondtcprev","minnumcommondtcprev2","avgnumcommondtcprev2","devnumcommondtcprev2","maxnumcommondtcprev2","minnumcommondtcprev3","avgnumcommondtcprev3","devnumcommondtcprev3","maxnumcommondtcprev3","dtc1518.x","dtc4497.x","dtc5478.x","dtc5641.x","dtc6578.x","dtc7423.x","dtc7891.x","dtc10064.x","dtc10369.x","dtc12187.x","dtc12250.x","dtc13955.x","dtc15255.x","dtc15432.x","dtc15812.x","dtc17042.x","dtc17628.x","dtc17811.x","dtc17859.x","dtc18692.x","dtc19521.x","dtc22001.x","dtc22227.x","dtc23418.x","dtc25131.x","dtc25326.x","dtc25582.x","dtc26995.x","dtc31468.x","dtc32024.x","dtc33110.x","dtc33512.x","dtc34988.x","dtc36023.x","dtc42517.x","dtc44977.x","dtc46862.x","dtc48539.x","dtc51473.x","dtc51948.x","dtc52667.x","dtc53595.x","dtc53663.x","dtc53784.x","dtc53856.x","dtc54051.x","dtc55277.x","dtc61484.x","dtc62222.x","dtc62359.x","dtc64794.x","dtc67558.x","dtc68286.x","dtc69604.x","dtc70319.x","dtc70324.x","dtc70625.x","dtc71273.x","dtc72172.x","dtc1518.y","dtc4497.y","dtc5478.y","dtc5641.y","dtc6578.y","dtc7423.y","dtc7891.y","dtc10064.y","dtc10369.y","dtc12187.y","dtc12250.y","dtc13955.y","dtc15255.y","dtc15432.y","dtc15812.y","dtc17042.y","dtc17628.y","dtc17811.y","dtc17859.y","dtc18692.y","dtc19521.y","dtc22001.y","dtc22227.y","dtc23418.y","dtc25131.y","dtc25326.y","dtc25582.y","dtc26995.y","dtc31468.y","dtc32024.y","dtc33110.y","dtc33512.y","dtc34988.y","dtc36023.y","dtc42517.y","dtc44977.y","dtc46862.y","dtc48539.y","dtc51473.y","dtc51948.y","dtc52667.y","dtc53595.y","dtc53663.y","dtc53784.y","dtc53856.y","dtc54051.y","dtc55277.y","dtc61484.y","dtc62222.y","dtc62359.y","dtc64794.y","dtc67558.y","dtc68286.y","dtc69604.y","dtc70319.y","dtc70324.y","dtc70625.y","dtc71273.y","dtc72172.y","model259","model259C","model259R","model259S","modelE31","modelE36","modelE38","modelE39","modelE46","modelE52","modelE53","modelE60","modelE61","modelE63","modelE64","modelE65","modelE66","modelE67","modelE68","modelE70","modelE71","modelE72","modelE81","modelE82","modelE83","modelE84","modelE85","modelE86","modelE87","modelE88","modelE89","modelE90","modelE91","modelE92","modelE93","modelF01","modelF02","modelF03","modelF04","modelF06","modelF07","modelF10","modelF11","modelF12","modelF13","modelF25","modelF30","modelK14","modelK15","modelK16","modelK25","modelK26","modelK27","modelK28","modelK29","modelK30","modelK40","modelK41","modelK43","modelK44","modelK46","modelK48","modelK589","modelK71","modelK72","modelK73","modelR13","modelR21","modelR22","modelR28","modelR50","modelR52","modelR53","modelR55","modelR56","modelR57","modelR58","modelR59","modelR60","modelRR1","modelRR2","modelRR3","modelRR4"];

// Perform transformations and write logical matrix file (frame)
// data -> filter double($.minmileage) == 0 -> count();  39640
// data -> filter double($.avgmileage) == 0 -> count();  29641



data
   // skip header and preserve original order of attribute list
-> transform each r ( attrList -> transform r.($) )
   // perform transformations on selected slots
   //   * date -> year only
   //   * class label 1 and 2 to -1 and +1 
-> transform replaceElement ($, 1, dateParts(date($[1])).year)
-> transform replaceElement ($, 0, (long($[0]) * 2) - 3 )
-> write( del( fname + ".frame"));


// Separate into lemon and non-lemon write MTX and MTD 

read( del( fname + ".frame"))
   // write non-lemons 
-> tee (
        -> filter long($[0]) == -1
        -> write( del( fname + "-1.frame"))
       )
   // write lemons 
-> filter long($[0]) == 1
-> write( del( fname + "+1.frame"));
FrameToSparseMatrix (fname + "-1.frame");
FrameToSparseMatrix (fname + "+1.frame");

