#library("batch")
library("Matrix")
# Usage: R --vanilla -args Xfile X < DescriptiveStatistics.R

#parseCommandArgs()
######################

V = readMM(file="C:/workspace/DML/test/scripts/applications/univariate/in/vector.mtx")
P = readMM(file="C:/workspace/DML/test/scripts/applications/univariate/in/prob.mtx")
Helper=matrix(1, 2, 1)

n = nrow(V)

# sum
s1 = sum(V)

# squared sum
s2 = sum(V^2)

# cubic sum
s3 = sum(V^3)

# quard sum
s4 = sum(V^4)

# mean
mu = s1/n

# standard deviations
std_dev = sqrt((s2/n - mu*mu)*(n/(n-1)))

# standard errors of mean
SE = std_dev/sqrt(n)

# variances
var = std_dev^2

# coefficients of variation
cv = std_dev/mu

# harmonic means (note: may generate out of memory for large sparse matrices becauses of NaNs)
har_mu = n/sum((1.0/V))

# geometric means is not currently supported.
 geom_mu = n*exp(sum(log(V))/n)

# min and max
mn=min(V)
mx=max(V)

# range
rng = mx - mn

# 2nd central moment
m2=var*(n-1)/n

# 4th central moment
m4=(s4-4*mu*s3+6*mu^2*s2-4*mu^3*s1)/n+mu^4

# Skewness
g1 = (s3 - 3*mu*s2 + 3*mu^2*s1 -n*mu^3)/(n*std_dev^3)

# standard error of skewness (not sure how it is defined without the weight)
se_g1=sqrt( 6*n*(n-1) / ((n-2)*(n+1)*(n+3)) )

# Kurtosis (using binomial formula)
g2 = (sum(V^4) - 4*s3*mu + 6*s2*mu^2 - 3*n*mu^4)/(n*std_dev^4) - 3

# Standard error of Kurtosis (not sure how it is defined without the weight)
se_g2= sqrt( (4*(n^2-1)*se_g1^2)/((n+5)*(n-3)) )

# median
md = quantile(V, 0.5, type = 1)

# quantile
Q = t(quantile(V, P[,1], type = 1))

# inter-quartile mean
S=c(sort(V[,1]))
n25=ceiling(length(S)*0.25)
n75=ceiling(length(S)*0.75)
T=S[(n25+1):n75]
iqm=mean(T)

# outliers use ppred to describe it
out_minus = as.numeric(V< mu-5*std_dev)*V 
out_plus = as.numeric(V> mu+5*std_dev)*V

meanHelper=mu*Helper
stdHelper=std_dev*Helper
SEHelper=SE*Helper
varHelper=var*Helper
cvHelper=cv*Helper
harHelper=har_mu*Helper
geomHelper=geom_mu*Helper
minHelper=mn*Helper
maxHelper=mx*Helper
rngHelper=rng*Helper
g1Helper=g1*Helper
se_g1Helper=se_g1*Helper
g2Helper=g2*Helper
se_g2Helper=se_g2*Helper
medianHelper1 = md * Helper
iqmHelper = iqm * Helper

writeMM(as(t(meanHelper),"CsparseMatrix"), "C:/workspace/DML/test/scripts/applications/univariate/expected/mean", format="text");
writeMM(as(t(stdHelper),"CsparseMatrix"), "C:/workspace/DML/test/scripts/applications/univariate/expected/std", format="text");
writeMM(as(t(SEHelper),"CsparseMatrix"), "C:/workspace/DML/test/scripts/applications/univariate/expected/se", format="text");
writeMM(as(t(varHelper),"CsparseMatrix"), "C:/workspace/DML/test/scripts/applications/univariate/expected/var", format="text");
writeMM(as(t(cvHelper),"CsparseMatrix"), "C:/workspace/DML/test/scripts/applications/univariate/expected/cv", format="text");
writeMM(as(t(harHelper),"CsparseMatrix"), "C:/workspace/DML/test/scripts/applications/univariate/expected/har", format="text");
writeMM(as(t(geomHelper),"CsparseMatrix"), "C:/workspace/DML/test/scripts/applications/univariate/expected/geom", format="text");
writeMM(as(t(minHelper),"CsparseMatrix"), "C:/workspace/DML/test/scripts/applications/univariate/expected/min", format="text");
writeMM(as(t(maxHelper),"CsparseMatrix"), "C:/workspace/DML/test/scripts/applications/univariate/expected/max", format="text");
writeMM(as(t(rngHelper),"CsparseMatrix"), "C:/workspace/DML/test/scripts/applications/univariate/expected/rng", format="text");
writeMM(as(t(g1Helper),"CsparseMatrix"), "C:/workspace/DML/test/scripts/applications/univariate/expected/g1", format="text");
writeMM(as(t(se_g1Helper),"CsparseMatrix"), "C:/workspace/DML/test/scripts/applications/univariate/expected/se_g1", format="text");
writeMM(as(t(g2Helper),"CsparseMatrix"), "C:/workspace/DML/test/scripts/applications/univariate/expected/g2", format="text");
writeMM(as(t(se_g2Helper),"CsparseMatrix"), "C:/workspace/DML/test/scripts/applications/univariate/expected/se_g2", format="text");
writeMM(as(t(out_minus),"CsparseMatrix"), "C:/workspace/DML/test/scripts/applications/univariate/expected/out_minus", format="text");
writeMM(as(t(out_plus),"CsparseMatrix"), "C:/workspace/DML/test/scripts/applications/univariate/expected/out_plus", format="text");
writeMM(as(t(medianHelper1),"CsparseMatrix"), "C:/workspace/DML/test/scripts/applications/univariate/expected/median", format="text");
writeMM(as(t(Q),"CsparseMatrix"), "C:/workspace/DML/test/scripts/applications/univariate/expected/quantile", format="text");
writeMM(as(t(iqmHelper),"CsparseMatrix"), "C:/workspace/DML/test/scripts/applications/univariate/expected/iqm", format="text");
