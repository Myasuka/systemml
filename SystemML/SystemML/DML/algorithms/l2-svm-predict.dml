#-------------------------------------------------------------
# IBM Confidential
# OCO Source Materials
# (C) Copyright IBM Corp. 2010, 2014
# The source code for this program is not published or
# otherwise divested of its trade secrets, irrespective of
# what has been deposited with the U.S. Copyright Office.
#-------------------------------------------------------------

# This script can be used to compute label predictions
# Meant for use with a model learnt using l2-svm.dml
#
# Given ground truth labels, the script will compute an 
# accuracy (%) for the predictions
#
# Example Usage:
# hadoop jar SystemML.jar -f l2-svm-predict.dml -nvargs X=data Y=labels icpt=intercept model=model scores=scores accuracy=accuracy confusion=confusion fmt="text"
#
# Note about inputs: 
# labels (entries in Y) should either be set to +1/-1
# or be the result of recoding
# anything else may prompt an error message from this script

cmdLine_Y = ifdef($Y, " ")
cmdLine_confusion = ifdef($confusion, " ")
cmdLine_accuracy = ifdef($accuracy, " ")
cmdLine_scores = ifdef($scores, " ")
cmdLine_fmt = ifdef($fmt, "text")
cmdLine_icpt = ifdef($icpt, 0)

X = read($X)

intercept = cmdLine_icpt
w = read($model)

b = 0.0
if(intercept == 1)
	b = castAsScalar(w[nrow(w),1])

scores = b + (X %*% w[1:ncol(X),])

if(cmdLine_scores != " ")
	write(scores, cmdLine_scores, format=cmdLine_fmt)

if(cmdLine_Y != " "){
	y = read(cmdLine_Y)

	# checking labels in y
	# there should be only 2 distinct values in y
	check_min = min(y)
	check_max = max(y)
	num_min = sum(ppred(y, check_min, "=="))
	num_max = sum(ppred(y, check_max, "=="))
	if(num_min + num_max != nrow(y)) print("please check y, it should contain only 2 labels")
	else{
		if(check_min != -1 | check_max != +1) 
			y = 2/(check_max - check_min)*y - (check_min + check_max)/(check_max - check_min)
	}

	pred = 2*ppred(scores, 0, ">") - 1
	num_correct = sum(ppred(pred, y, "=="))
	acc = 100*num_correct/nrow(X)

	acc_str = "Accuracy (%): " + acc
	print(acc_str)
	if(cmdLine_accuracy != " ")
		write(acc_str, cmdLine_accuracy)

	if(cmdLine_confusion != " "){
		pred_is_minus = ppred(pred, -1, "==")
		pred_is_plus = 1 - pred_is_minus
		y_is_minus = ppred(y, -1, "==")
		y_is_plus = 1 - y_is_minus

		check_min_y_minus = sum(pred_is_minus*y_is_minus)
		check_min_y_plus = sum(pred_is_minus*y_is_plus)
		check_max_y_minus = sum(pred_is_plus*y_is_minus)
		check_max_y_plus = sum(pred_is_plus*y_is_plus)

		s = check_min_y_minus + "," + check_min_y_plus
		s = append(s, check_max_y_minus + "," + check_max_y_plus)
		s = append(s, "")
		write(s, cmdLine_confusion)
	}
}
