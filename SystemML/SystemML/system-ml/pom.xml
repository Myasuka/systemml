<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<artifactId>system-ml</artifactId>
	<name>SystemML compiler</name>



	<scm>
		<url>scm:jazz:https://sdijazzccm04.svl.ibm.com:9446/jazz:systemml-reactor-3.9/jazz:${RTC_WORKSPACE}</url>
		<connection>scm:jazz:https://sdijazzccm04.svl.ibm.com:9446/jazz:systemml-reactor-3.9/jazz:${RTC_WORKSPACE}</connection>
		<developerConnection>scm:jazz:https://sdijazzccm04.svl.ibm.com:9446/jazz:systemml-reactor-3.9/jazz:${RTC_WORKSPACE}</developerConnection>
	</scm>

	<parent>
		<groupId>com.ibm.biginsights</groupId>
		<artifactId>systemml-reactor</artifactId>
		<version>3.9</version>
		<relativePath>../pom.xml</relativePath>
	</parent>

	<build>
		<plugins>
		
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>2.4</version>
				<executions>
					<execution>
						<id>unpack</id>
						<phase>package</phase>
						<goals>
							<goal>unpack</goal>
						</goals>
						<configuration>
							<artifactItems>
								<artifactItem>
									<groupId>org.apache.hadoop</groupId>
									<artifactId>hadoop-test</artifactId>
									<version>1.2.1</version>
									<!-- <classifier>jar</classifier> -->
									<type>jar</type>
									<overWrite>true</overWrite>
									<outputDirectory>${project.build.directory}/hadoop-test</outputDirectory>
									<includes>**/*</includes>
								</artifactItem>
							</artifactItems>
							<overWriteReleases>false</overWriteReleases>
							<overWriteSnapshots>true</overWriteSnapshots>
						</configuration>
					</execution>
				</executions>
			</plugin>
		
			<!-- PLEASE DO NOT REMOVE! NEEDED to "PACKAGE" NIMBLE INTO SYSTEMML.JAR -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-shade-plugin</artifactId>
				<version>2.3</version>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>shade</goal>
						</goals>
					</execution>
				</executions>

				<configuration>
					<!-- Include signature files so that recent versions of Java will run 
						the resulting jar without complaining about "Invalid signature file digest 
						for Manifest main attributes". -->
					<filters>
						<filter>
							<artifact>*:*</artifact>
							<excludes>
								<exclude>META-INF/*.SF</exclude>
								<exclude>META-INF/*.DSA</exclude>
								<exclude>META-INF/*.RSA</exclude>
							</excludes>
						</filter>
					</filters>
				</configuration>
			</plugin>
			
			
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>1.8</version>
				<executions>
					<execution>
						<id>add-test-source</id>
						<phase>generate-test-sources</phase>
						<goals>
							<goal>add-test-source</goal>
						</goals>
						<configuration>
							<sources>
								<!--  Test suite classes kept in a separate folder for compability
								 	  with the Eclipse JUnit test runner. -->
								<source>${basedir}/src/test_suites/java</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			
			
			<!--plugin> <groupId>org.codehaus.mojo</groupId> <artifactId>javacc-maven-plugin</artifactId> 
				<version>2.6</version> <configuration> <sourceDirectory>${basedir}/src/main/java</sourceDirectory> 
				</configuration> <executions> <execution> <id>javacc</id> <goals> <goal>javacc</goal> 
				</goals> </execution> </executions> </plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<excludes>
						<exclude>**/udf/lib/LinearSolverWrapperCP.java</exclude>
						<exclude>**/dml/utils/visualize/*.java</exclude>
					</excludes>
				</configuration>

			</plugin>


			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>2.4</version>
				<executions>
					<execution>
						<id>create-package-assemblies</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
						<configuration>
							<skipAssembly>true</skipAssembly>
						</configuration>
					</execution>
					<execution>
						<id>create-bigsheets-package-assemblies</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
						<configuration>
							<descriptors>
								<descriptor>src/assembly/distrib.xml</descriptor>
							</descriptors>
						</configuration>
					</execution>
					<execution>
						<id>create-standalone-assembly</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
						<configuration>
							<descriptors>
								<descriptor>src/assembly/standalone.xml</descriptor>
							</descriptors>
						</configuration>
					</execution>
					<execution>
						<id>create-inmemory-jar</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
						<configuration>
							<descriptors>
								<descriptor>src/assembly/inmemory.xml</descriptor>
							</descriptors>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<archive>
						<index>true</index>
						<!-- <manifest> -->
						<!-- <addClasspath>true</addClasspath> -->
						<!-- </manifest> -->
						<manifestEntries>
							<Build-Timestamp>${maven.build.timestamp}</Build-Timestamp>
							<Main-Class>com.ibm.bi.dml.api.DMLScript</Main-Class>
						</manifestEntries>
					</archive>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.antlr</groupId>
				<artifactId>antlr4-maven-plugin</artifactId>
				<configuration>
					<sourceDirectory>${basedir}/src/main/java</sourceDirectory>
					<outputDirectory>${basedir}/src/main/java</outputDirectory>
				</configuration>
				<version>4.3</version>
				<executions>
					<execution>
						<id>antlr</id>
						<goals>
							<goal>antlr4</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

	<!-- The BigInsights Jenkins server does not allow builds to run for more 
		than 30 minutes, so there isn't enough time to run the full test suite during 
		the "test" phase of the Maven lifecycle. So we only run tests during the 
		"integration-test" phase. To run the tests, run "mvn verify". -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.17</version>
				<configuration>
					
					<!-- Hack Alert: Added to force Jenkins to skip the tests. To run mvn install with tests, use -DskipTests=false -->
					<skipTests>true</skipTests>
				
					<!-- STDERR/STDOUT to individual .txt files instead of console -->
					<redirectTestOutputToFile>true</redirectTestOutputToFile>

					<!-- Run (num cores) test harness classes in parallel, each in a separate 
						process -->
					<forkCount>1C</forkCount>
					<reuseForks>true</reuseForks>

					<!-- Third argument prevents Java from popping up lots of windows on 
						MacOS -->
					<argLine>-Dfile.encoding=UTF-8 -Xmx2g -Xms2g -Xmn200m
						-Djava.awt.headless=true</argLine>

					<includes>
						<!--  All tests are integration tests as far as Maven is concerned. -->
					</includes>

					<excludes>
						<exclude>**/slowtest/**</exclude>
						<exclude>**/integration/**</exclude>
					</excludes>

				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>

				<!-- *** HACK ALERT *** HACK ALERT *** HACK ALERT *** -->
				<!-- Failsafe 2.18 has a bug in computing # cores, so use 2.17 -->
				<version>2.17</version>
				<!-- *** END HACK *** -->

				<executions>
					<execution>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
				
					<!-- Hack Alert: Added to force Jenkins to skip the tests. To run mvn install with tests, use -DskipTests=false -->
					<skipTests>true</skipTests>
				
					<!-- STDERR/STDOUT to individual .txt files instead of console -->
					<redirectTestOutputToFile>true</redirectTestOutputToFile>

					<!-- Tests are grouped into suites, one suite per package. -->
					<parallel>suites</parallel>
					<threadCount>1</threadCount>

					<!-- 2 processes per test -->
					<forkCount>0.5C</forkCount>
					<reuseForks>false</reuseForks>

					<!-- Last argument prevents Java from popping up lots of windows on 
						MacOS -->
					<argLine>-Dfile.encoding=UTF-8 -Xmx2g -Xms2g -Xmn200m
						${integrationTestExtraJVMArgs}
						-Djava.awt.headless=true</argLine>

					<includes>
						<include>**/integration/**/*Suite.java</include>
					</includes>

					<excludes>
						<exclude>**/slowtest/**</exclude>
					</excludes>

				</configuration>
			</plugin>

		</plugins>

	</build>

	
	<profiles>
	<!-- Profile for Windows builds. Not currently needed, but might be needed 
		in the future. -->
		<profile>
			<id>platform-windows</id>
			<activation>
				<os>
					<family>windows</family>
				</os>
			</activation>
			<properties>
				<!-- Extra JVM args for Windows go here.-->
				<integrationTestExtraJVMArgs />
			</properties>
		</profile>
	</profiles>



	<dependencies>
	

		<dependency>
			<groupId>org.apache.spark</groupId>
			<artifactId>spark-core_2.10</artifactId>
			<version>1.2.1_IBM_1</version>
			<scope>provided</scope>
		</dependency>

		<!-- Adding Gauva version 14.0.1 to workaround conflict between spark and hadoop dependency -->
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>14.0.1</version>
		</dependency>


		<dependency>
			<groupId>org.apache.hadoop</groupId>
			<artifactId>hadoop-common</artifactId>
			<version>2.4.0</version>
			<scope>provided</scope>
		</dependency>
		<!-- dependency> <groupId>org.apache.hadoop</groupId> <artifactId>hadoop-mapreduce-client-core</artifactId> 
			<version>2.2.0</version> <scope>provided</scope> </dependency -->
		<dependency>
			<groupId>org.apache.hadoop</groupId>
			<artifactId>hadoop-hdfs</artifactId>
			<version>2.4.0</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>commons-logging</groupId>
			<artifactId>commons-logging</artifactId>
			<version>1.1.1</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-math3</artifactId>
			<version>3.1.1</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.15</version>
			<scope>provided</scope>
		</dependency>


		<dependency>
			<groupId>net.sf.opencsv</groupId>
			<artifactId>opencsv</artifactId>
			<version>1.8</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>com.ibm.json</groupId>
			<artifactId>JSON4J</artifactId>
			<version>1.0.1.0</version>
		</dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.11</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.ibm.thirdparty</groupId>
			<artifactId>nimble-hadoop</artifactId>
			<version>1.0.2</version>
		</dependency>
		<!-- <dependency> -->
		<!-- <groupId>com.ibm.thirdparty</groupId> -->
		<!-- <artifactId>grappa-vis</artifactId> -->
		<!-- <version>1.0.0</version> -->
		<!-- </dependency> -->


		<dependency>
			<groupId>com.ibm.jaql</groupId>
			<artifactId>jaql</artifactId>
			<version>0.5.2</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>stax</groupId>
			<artifactId>stax-api</artifactId>
			<version>1.0.1</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>commons-collections</groupId>
			<artifactId>commons-collections</artifactId>
			<version>3.2.1</version>
			<scope>provided</scope>
		</dependency>


		<dependency>
			<groupId>org.antlr</groupId>
			<artifactId>antlr4</artifactId>
			<version>4.3</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.antlr</groupId>
			<artifactId>antlr4-runtime</artifactId>
			<version>4.3</version>
		</dependency>

		<!-- Libraries for yarn integration -->
		<dependency>
			<groupId>org.apache.hadoop</groupId>
			<artifactId>hadoop-yarn-api</artifactId>
			<version>2.4.1-4</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.apache.hadoop</groupId>
			<artifactId>hadoop-yarn-common</artifactId>
			<version>2.4.1-4</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.apache.hadoop</groupId>
			<artifactId>hadoop-yarn-client</artifactId>
			<version>2.4.1-4</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.apache.hadoop</groupId>
			<artifactId>hadoop-mapreduce-client-common</artifactId>
			<version>2.4.1-4</version>
			<scope>provided</scope>
		</dependency>

	</dependencies>

	<!-- <groupId>com.ibm.biginsights</groupId> -->

	<properties>
		<!-- OS-specific JVM arguments for running integration tests -->
		<integrationTestExtraJVMArgs />

		<installDir>/usr/ibm/biginsights/${BIVersion}</installDir>
	</properties>
</project>
